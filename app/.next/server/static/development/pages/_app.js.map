{"version":3,"file":"static\\development\\pages\\_app.js","sources":["webpack:///webpack/bootstrap","webpack:///../mock/labels/index.js","webpack:///../server/utils/proxyAgent.js","webpack:///./components/organisms/SignIn/SignIn.actions.js","webpack:///./components/organisms/SignIn/SignIn.constants.js","webpack:///./components/organisms/SignIn/SignIn.reducer.js","webpack:///./components/organisms/SignIn/SignIn.saga.js","webpack:///./components/organisms/SignIn/types/index.js","webpack:///./components/templates/LoginPage/LoginPage.reducer.js","webpack:///./components/templates/LoginPage/LoginPage.saga.js","webpack:///./constants/api/services.js","webpack:///./constants/api/url.js","webpack:///./constants/index.js","webpack:///./global/actions/index.js","webpack:///./global/constants/index.js","webpack:///./global/reducer/globalData.js","webpack:///./global/reducer/index.js","webpack:///./global/reducer/labels.js","webpack:///./global/saga/index.js","webpack:///./lib/dynamicStore/checkStore.js","webpack:///./lib/dynamicStore/configureStore.js","webpack:///./lib/dynamicStore/constants.js","webpack:///./lib/dynamicStore/enhance.js","webpack:///./lib/dynamicStore/injectSagaAndReducer.js","webpack:///./lib/dynamicStore/monitorSagas.js","webpack:///./lib/dynamicStore/reducerInjectors.js","webpack:///./lib/dynamicStore/reducers.js","webpack:///./lib/dynamicStore/sagaInjectors.js","webpack:///./locales/en-US.js","webpack:///./pages/_app.js","webpack:///./utils/cacheableServices.js","webpack:///./utils/fetch.js","webpack:///./utils/logger.js","webpack:///./utils/loggerFactory.js","webpack:///./utils/servicesCache.config.js","webpack:///./utils/utils.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"agentkeepalive\"","webpack:///external \"axios\"","webpack:///external \"es6-promise\"","webpack:///external \"hoist-non-react-statics\"","webpack:///external \"invariant\"","webpack:///external \"lodash/conformsTo\"","webpack:///external \"lodash/each\"","webpack:///external \"lodash/get\"","webpack:///external \"lodash/isEmpty\"","webpack:///external \"lodash/isFunction\"","webpack:///external \"lodash/isObject\"","webpack:///external \"lodash/isString\"","webpack:///external \"next-redux-saga\"","webpack:///external \"next-redux-wrapper\"","webpack:///external \"next/app\"","webpack:///external \"next/config\"","webpack:///external \"next/router\"","webpack:///external \"os\"","webpack:///external \"react\"","webpack:///external \"react-redux\"","webpack:///external \"redux\"","webpack:///external \"redux-devtools-extension\"","webpack:///external \"redux-saga\"","webpack:///external \"redux-saga/effects\"","webpack:///external \"winston\"","webpack:///external \"winston-logrotate\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const accountSummary = {\r\n  name: 'Investment Name',\r\n  price: 'Latest Price',\r\n  qty: 'Quantity',\r\n  value: 'Value',\r\n};\r\n\r\nconst labels = {\r\n  accountSummary,\r\n};\r\n\r\nexport default labels;\r\n","const Agent = require('agentkeepalive');\r\n\r\nconst keepAliveSettings = {\r\n  maxSockets: +process.env.MAX_SOCKETS,\r\n  keepAlive: true,\r\n  maxFreeSockets: +process.env.MAX_FREE_SOCKETS,\r\n  keepAliveMsecs: +process.env.KEEP_ALIVE_MSECS,\r\n  timeout: +process.env.API_TIMEOUT,\r\n  keepAliveTimeout: +process.env.KEEP_ALIVE_TIMEOUT,\r\n};\r\n\r\nmodule.exports = {\r\n  http: new Agent(keepAliveSettings),\r\n  https: new Agent.HttpsAgent(keepAliveSettings),\r\n};\r\n","// @flow\r\nimport {\r\n  SIGNIN_FAILURE,\r\n  SIGNIN_REQUEST,\r\n  LOADING_INDICATOR_STATUS,\r\n  VALIDATE_USER_NAME,\r\n  VALIDATE_USER_NAME_SUCCESS,\r\n  SIGNIN_ERRORS,\r\n  UPDATE_LOGIN_FORM\r\n} from './SignIn.constants';\r\nimport { signInRequestType } from './types';\r\n\r\nexport const checkUserValidAction = (userID) => ({\r\n  type: VALIDATE_USER_NAME,\r\n  userID,\r\n});\r\n\r\nexport const setUserValidAction = (response) => ({\r\n  type: VALIDATE_USER_NAME_SUCCESS,\r\n  response,\r\n});\r\n\r\nexport const requestSignInAction = (requestData): signInRequestType => ({type: SIGNIN_REQUEST,\r\n  requestData,\r\n});\r\n\r\nexport const loadingIndicatorAction = (status) => ({\r\n  type: LOADING_INDICATOR_STATUS,\r\n  status\r\n});\r\n\r\nexport const setErrorsAction = (error) => ({\r\n  type: SIGNIN_ERRORS,\r\n  error\r\n});\r\n\r\nexport const updateLoginAction = (identifier, value) => {\r\n  console.log(identifier, value);\r\n  return {\r\n    type: UPDATE_LOGIN_FORM,\r\n    identifier,\r\n    value\r\n  }\r\n}\r\n","export const SIGNIN_REQUEST = 'FIL/SIGNIN/SIGNIN_REQUEST';\r\nexport const SIGNIN_ERRORS = 'FIL/SIGNIN/SIGNIN_ERRORS';\r\nexport const VALIDATE_USER_NAME = 'FIL/SIGNIN/VALIDATE_USER_NAME';\r\nexport const VALIDATE_USER_NAME_SUCCESS = 'FIL/SIGNIN/VALIDATE_USER_NAME_SUCCESS';\r\n\r\nexport const LOADING_INDICATOR_STATUS = 'FIL/SIGNIN/LOADING_INDICATOR_STATUS';\r\n\r\nexport const UPDATE_LOGIN_FORM = 'FIL/SIGNIN/UPDATE_LOGIN_FORM';","// @flow\r\nimport {\r\n  SIGNIN_ERRORS,\r\n  LOADING_INDICATOR_STATUS,\r\n  VALIDATE_USER_NAME_SUCCESS,\r\n  UPDATE_LOGIN_FORM\r\n} from './SignIn.constants';\r\nimport { updateState } from '../../../utils/utils';\r\n\r\nexport const initialState = {\r\n  loginForm: {\r\n    userName: '',\r\n    password: ''\r\n  }\r\n};\r\n/**\r\n * Method to capture error in case of action failure\r\n * @param state - State\r\n * @param action - Failure action\r\n * @return state - error along with current State\r\n */\r\n\r\nconst setErrors = (state, { error }) => updateState(state, { errorMessage: error });\r\n\r\nconst loadingIndicator = (state, {status}) => updateState(state, { isLoaderActive: status });\r\n\r\nconst setUserValid = (state, { response }) => updateState(state, { isUserValid: response });\r\n\r\nconst updateLogin = (state, action) => {\r\n  let newState = {...state};\r\n  newState.loginForm[action.identifier] = action.value;\r\n  return newState;\r\n}\r\n\r\nconst signIn = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SIGNIN_ERRORS:\r\n      return setErrors(state, action);\r\n    case LOADING_INDICATOR_STATUS:\r\n      return loadingIndicator(state, action);\r\n    case VALIDATE_USER_NAME_SUCCESS: \r\n      return setUserValid(state, action)\r\n    case UPDATE_LOGIN_FORM:\r\n      return updateLogin(state, action)\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default signIn;\r\n","// @flow\r\nimport { call, put, takeLatest } from 'redux-saga/effects';\r\n\r\nimport { SIGNIN_REQUEST, VALIDATE_USER_NAME, UPDATE_LOGIN_FORM } from './SignIn.constants';\r\nimport {\r\n  loadingIndicatorAction,\r\n  setErrorsAction,\r\n  setUserValidAction\r\n} from './SignIn.actions';\r\nimport API from '../../../utils/fetch';\r\nimport { STATUS_ERROR, STATUS_SUCCESS } from '../../../constants';\r\nimport API_URLS from '../../../constants/api/url';\r\nimport { setUserStateAction, setAuthenticationAction } from '../../../global/actions';\r\nimport { loginResponseError } from '../../../../app/locales/en-US';\r\n\r\nexport function* validateUserSaga(action): Generator<*, *, *> {\r\n  try {\r\n    yield put(loadingIndicatorAction(true));\r\n    yield put(setUserValidAction(false));\r\n    yield put(setErrorsAction({}));\r\n    const data = yield call(API.fetch, API_URLS.validateUsername);\r\n    if (data.status.toLocaleUpperCase() === STATUS_ERROR) {\r\n      yield put(setErrorsAction(data.message));\r\n      yield put(loadingIndicatorAction(false));\r\n    } else if (data.status.toLocaleUpperCase() === STATUS_SUCCESS) {\r\n      yield put(setUserValidAction(data.data[0].isUserExists));\r\n      yield put(loadingIndicatorAction(false));\r\n    }\r\n  } catch (err) {\r\n    yield put(loadingIndicatorAction(false));\r\n    yield put(setErrorsAction(loginResponseError));\r\n  }\r\n}\r\n\r\nexport function* userSignInSaga(action): Generator<*, *, *> {\r\n  try {\r\n    yield put(setErrorsAction({}));\r\n    yield put(loadingIndicatorAction(true));\r\n    const data = yield call(API.fetch, API_URLS.login);\r\n    if (data.status.toUpperCase() === STATUS_ERROR) {\r\n      yield put(setAuthenticationAction(false, {}))\r\n      yield put(setErrorsAction(data.message));\r\n      yield put(loadingIndicatorAction(false));\r\n    } else if (data.status.toUpperCase() === STATUS_SUCCESS) {\r\n      yield put(setAuthenticationAction(true, data.data))\r\n      yield put(setUserStateAction(data.data));\r\n      yield put(loadingIndicatorAction(false));\r\n    }\r\n  } catch (err) {\r\n    yield put(loadingIndicatorAction(false));\r\n    yield put(setErrorsAction(loginResponseError));\r\n  }\r\n}\r\n\r\nconst signInSaga = () => {\r\n  return [takeLatest(VALIDATE_USER_NAME, validateUserSaga),takeLatest(SIGNIN_REQUEST, userSignInSaga)]\r\n}\r\n\r\nexport default signInSaga;\r\n","//  @flow\r\nimport type { Map } from 'immutable';\r\nimport { FAILURE, SIGNIN_REQUEST } from '../../SignIn/SignIn.constants';\r\n\r\nexport type Props = {\r\n  className: string,\r\n};\r\n\r\nexport type State = {\r\n  submitted: boolean,\r\n  userName: {\r\n    value: string,\r\n    isList: boolean,\r\n    errorMessage: string,\r\n  },\r\n  password: {\r\n    isPassword: boolean,\r\n    value: string,\r\n    isList: boolean,\r\n    errorMessage: string,\r\n  },\r\n  isValidUserName: boolean,\r\n};\r\n\r\nexport type mapDispatchToProps = {\r\n  requestSignIn: () => void,\r\n};\r\n\r\nexport type MapStateToProps = {\r\n  signInData: Map,\r\n};\r\n\r\nexport type failureAction = () => { type: typeof FAILURE, data: Map };\r\nexport type signInRequestAction = () => { type: typeof SIGNIN_REQUEST, data: Map };\r\n","// @flow\r\nimport { combineReducers } from 'redux';\r\n\r\nexport const loginPageData = (state = {}, action) => {\r\n  return state;\r\n};\r\n\r\nexport default combineReducers({\r\n  loginPageData,\r\n});\r\n","/**\r\n * Sign In template Saga Watcher\r\n */\r\nexport default function* SignInTemplateSaga() {\r\n \r\n}\r\n","export default {\r\n  accountSummary: '/myaccount',\r\n  userStatus: '/user/status',\r\n  validateUsername: '/user/validate',\r\n  login: '/user/login',\r\n  labels: '/labels',\r\n  home: '/home',\r\n};\r\n","import Services from './services';\r\n\r\nconst genericUrls = {};\r\n\r\nconst API_URLS = { ...genericUrls, ...Services };\r\nexport default API_URLS;\r\n","// Devices\r\nexport const DESKTOP = 'desktop';\r\nexport const PHONE = 'phone';\r\nexport const TABLET = 'tablet';\r\nexport const MOBILE = 'mobile';\r\n\r\n// Paths\r\nexport const STATIC_IMAGE = '/static/images';\r\nexport const IMAGE_PLACEHOLDER = '/static/images/image-placeholder.png';\r\nexport const API_PROXY_PATH = '/api';\r\nexport const API_URLS = '/api';\r\n\r\n// Environments\r\nexport const ENV_DEVELOPMENT = 'development';\r\nexport const ENV_PRODUCTION = 'production';\r\n\r\n// Key Codes\r\nexport const KEY_ESCAPE = 27;\r\nexport const KEY_ENTER = 13;\r\nexport const KEY_TAB = 9;\r\nexport const KEY_SPACE = 32;\r\nexport const KEY_UP_CODE = 38;\r\nexport const KEY_LEFT_CODE = 37;\r\nexport const KEY_RIGHT_CODE = 39;\r\nexport const KEY_DOWN_CODE = 40;\r\nexport const API_ERROR_HANDLER_PAGE = '/error';\r\n\r\n// HTTP Status\r\nexport const STATUS_ERROR = 'ERROR';\r\nexport const STATUS_SUCCESS = 'SUCCESS';\r\nexport const RESPONSE_OK = 200;\r\nexport const RESPONSE_SERVER_ERROR = 500;\r\n\r\n// Themes\r\nexport const PRIMARY_THEME = 'PRIMARY_THEME';\r\nexport const BRAND_THEME = 'BRAND_THEME';\r\n","// @flow\r\nimport {\r\n  DEVICE_TYPE,\r\n  CURRENT_ROUTE,\r\n  IS_TABLET,\r\n  PAGE_URL,\r\n  PAGE_QUERY,\r\n  PAGE_ORIGIN,\r\n  CHECK_AUTH,\r\n  CHECK_AUTH_SUCCESS,\r\n  SET_USER_STATE,\r\n  GLOBAL_DATA_FAILURE,\r\n  GET_LABELS,\r\n  GET_LABELS_SUCCESS,\r\n  GET_LABELS_FAILURE,\r\n} from '../constants';\r\n\r\nexport const globalDataFailureAction = (error: Error) => ({ type: GLOBAL_DATA_FAILURE, error });\r\nexport const checkAuthenticationAction = () => ({ type: CHECK_AUTH });\r\nexport const setAuthenticationAction = (isUserLoggedIn: boolean, sessionData: any) => ({ type: CHECK_AUTH_SUCCESS, sessionInfo:{isUserLoggedIn,sessionData} });\r\nexport const setUserStateAction = (userState: any) => ({ type: SET_USER_STATE, userState });\r\nexport const setLabelsAction = (labels: any) => ({ type: GET_LABELS_SUCCESS, labels });\r\nexport const setLabelsErrorAction = (error: Error) => ({ type: GET_LABELS_FAILURE, error });\r\n\r\n// Page-level actions go here\r\nexport const pageActions = [];\r\n\r\n// Export client side global page-level actions.\r\nexport const pageClientSideActions = [checkAuthenticationAction];\r\n\r\n// All default actions go here\r\nexport default [];\r\n\r\nexport const serverActions = {\r\n  addDeviceType: (deviceType: string) => ({ type: DEVICE_TYPE, deviceType }),\r\n  addIsTablet: (isTablet: string) => ({ type: IS_TABLET, isTablet }),\r\n  setCurrentRoute: (pathname: string) => ({ type: CURRENT_ROUTE, pathname }),\r\n  setPageUrl: (pageUrl: string) => ({ type: PAGE_URL, pageUrl }),\r\n  setPageQuery: (pageQuery: { [string]: Array<string> }) => ({ type: PAGE_QUERY, pageQuery }),\r\n  setPageOrigin: (origin: string) => ({ type: PAGE_ORIGIN, origin }),\r\n  getLables: () => ({ type: GET_LABELS }),\r\n};\r\n","/* TODO: Remove lint exception */\r\n/* eslint-disable import/prefer-default-export */\r\nexport const DEVICE_TYPE = 'DEVICE_TYPE';\r\nexport const IS_TABLET = 'IS_TABLET';\r\nexport const REGION_TYPE = 'REGION_TYPE';\r\nexport const CONFIG_KEYS = 'CONFIG_KEYS';\r\nexport const CURRENT_ROUTE = 'CURRENT_ROUTE';\r\nexport const PAGE_URL = 'PAGE_URL';\r\nexport const PAGE_QUERY = 'PAGE_QUERY';\r\nexport const GLOBAL_DATA_FAILURE = 'FIL/GLOBAL/GLOBAL_DATA_FAILURE';\r\nexport const CHECK_AUTH = 'FIL/GLOBAL/CHECK_AUTH';\r\nexport const CHECK_AUTH_SUCCESS = 'FIL/GLOBAL/CHECK_AUTH_SUCCESS';\r\nexport const SET_USER_STATE = 'FIL/GLOBAL/SET_USER_STATE';\r\nexport const PAGE_ORIGIN = 'PAGE_ORIGIN';\r\nexport const LABELS_STATE_KEY = 'labels';\r\n\r\nexport const USER_STATE_LOGGED_IN = 'FIL/GLOBAL/SUCCESS';\r\nexport const USER_STATE_RECOGNIZED = 'FIL/GLOBAL/RECOGNIZED';\r\nexport const USER_STATE_ANONYMOUS = 'FIL/GLOBAL/ANONYMOUS';\r\n\r\nexport const GET_LABELS = 'FIL/GLOBAL/GET_LABELS';\r\nexport const GET_LABELS_SUCCESS = 'FIL/GLOBAL/GET_LABELS_SUCCESS';\r\nexport const GET_LABELS_FAILURE = 'FIL/GLOBAL/GET_LABELS_FAILURE';\r\n","// @flow\r\nimport { updateState } from '../../utils/utils';\r\n\r\nimport {\r\n  DEVICE_TYPE,\r\n  REGION_TYPE,\r\n  CONFIG_KEYS,\r\n  CURRENT_ROUTE,\r\n  IS_TABLET,\r\n  PAGE_URL,\r\n  PAGE_QUERY,\r\n  CHECK_AUTH_SUCCESS,\r\n  SET_USER_STATE,\r\n  USER_STATE_LOGGED_IN,\r\n  PAGE_ORIGIN,\r\n} from '../constants';\r\nimport type {\r\n  DeviceType,\r\n    GlobalType,\r\n    ActiveRegionType,\r\n    ConfigKeyType,\r\n    RouteType,\r\n    setIsTabletType,\r\n} from '../types';\r\nimport { setCookie } from '../../utils/utils';\r\n\r\nexport const initState = {\r\n  deviceType: '',\r\n  activeRegion: '',\r\n};\r\n\r\nconst setDevice = (state, { deviceType }): DeviceType => updateState(state, { deviceType });\r\n\r\nconst setIsTablet = (state, { isTablet }): setIsTabletType => updateState(state, { isTablet });\r\n\r\nconst setConfigKeys = (state, { configKeys }): ConfigKeyType => updateState(state, { configKeys });\r\n\r\nconst setRegion = (state, { activeRegion }): ActiveRegionType => updateState(state, { activeRegion });\r\n\r\nconst setPageUrl = (state, { pageUrl }): ActiveRegionType => updateState(state, { pageUrl });\r\n\r\nconst setRoute = (state, { pathname }): RouteType => updateState(state, { route: pathname });\r\n\r\nconst setPageQuery = (state, { pageQuery }) => updateState(state, { pageQuery });\r\n\r\nconst setAuthentication = (state, { sessionInfo }) => updateState(state, { sessionInfo });\r\n\r\nconst setUserState = (state, { userState }) => {\r\n  if (userState === USER_STATE_LOGGED_IN) setCookie('lastLogin', new Date());\r\n  return updateState(state, { userState });\r\n};\r\n\r\nconst setPageOrigin = (state, { origin }) => updateState(state, { pageOrigin: origin });\r\n\r\nexport default (state = initState, action: GlobalType = '') => {\r\n  switch (action.type) {\r\n    case DEVICE_TYPE:\r\n      return setDevice(state, (action: DeviceType));\r\n    case IS_TABLET:\r\n      return setIsTablet(state, action);\r\n    case REGION_TYPE:\r\n      return setRegion(state, action);\r\n    case CONFIG_KEYS:\r\n      return setConfigKeys(state, action);\r\n    case CURRENT_ROUTE:\r\n      return setRoute(state, action);\r\n    case PAGE_URL:\r\n      return setPageUrl(state, action);\r\n    case PAGE_QUERY:\r\n      return setPageQuery(state, action);\r\n    case CHECK_AUTH_SUCCESS:\r\n      return setAuthentication(state, action);\r\n    case SET_USER_STATE:\r\n      return setUserState(state, action);\r\n    case PAGE_ORIGIN:\r\n      return setPageOrigin(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","// @flow\r\nimport { combineReducers } from 'redux';\r\nimport globalData from './globalData';\r\nimport signIn from './../../components/organisms/SignIn/SignIn.reducer';\r\nimport labels from './labels';\r\n\r\nexport default combineReducers({\r\n  globalData,\r\n  signIn,\r\n  labels,\r\n});\r\n\r\nexport const globalDataStructure = [['global', 'globalData', 'deviceType']];\r\n","// @flow\r\n\r\nimport { GET_LABELS_SUCCESS } from '../constants';\r\n\r\nimport type { getLabelsActionType } from '../types';\r\nimport { updateState } from '../../utils/utils';\r\n\r\nexport const initState = {\r\n  accountSummary: {},\r\n};\r\n\r\nexport default (state = initState, action: getLabelsActionType) => {\r\n  switch (action.type) {\r\n    case GET_LABELS_SUCCESS:\r\n      return updateState(state, action.labels);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { all, call, put, takeLatest } from 'redux-saga/effects';\r\nimport API from '../../utils/fetch';\r\nimport API_URLS from '../../constants/api/url';\r\nimport { globalDataFailureAction, setAuthenticationAction, setUserStateAction, setLabelsAction, setLabelsError } from '../actions';\r\nimport { CHECK_AUTH, GET_LABELS } from '../constants';\r\nimport { STATUS_ERROR, STATUS_SUCCESS } from '../../constants';\r\nimport signInSaga from '../../components/organisms/SignIn/SignIn.saga';\r\nimport Labels from '../../../mock/labels';\r\n\r\nexport function* authenticationSaga() {\r\n  try {\r\n    const data = yield call(API.fetch, API_URLS.userStatus);\r\n    if (data.status.toUpperCase() === STATUS_ERROR) {\r\n      yield put(setAuthenticationAction(false, {}));\r\n      yield put(globalDataFailureAction(data));\r\n    } else if (data.status.toUpperCase() === STATUS_SUCCESS) {\r\n      yield put(setAuthenticationAction(true, data.data));\r\n      yield put(setUserStateAction(data.data));\r\n    }\r\n  } catch (err) {\r\n    yield put(globalDataFailureAction(err));\r\n  }\r\n}\r\n\r\nexport function* fetchLabels(action) {\r\n  try {\r\n    const labels = yield call(API.fetch, API_URLS.labels, action);\r\n    yield put(setLabelsAction(labels || Labels));\r\n  } catch (err) {\r\n    yield put(setLabelsAction(Labels));\r\n  }\r\n}\r\n\r\nexport default function* globalSaga() {\r\n  yield all([\r\n    takeLatest(CHECK_AUTH, authenticationSaga),\r\n    [...signInSaga()],\r\n    takeLatest(GET_LABELS, fetchLabels),\r\n  ]);\r\n}\r\n","import conformsTo from \"lodash/conformsTo\";\r\nimport isFunction from \"lodash/isFunction\";\r\nimport isObject from \"lodash/isObject\";\r\nimport invariant from \"invariant\";\r\n\r\n/**\r\n * Validate the shape of redux store\r\n *  @param {Object} store The store to verify\r\n */\r\nexport default function checkStore(store) {\r\n  const shape = {\r\n    dispatch: isFunction,\r\n    subscribe: isFunction,\r\n    getState: isFunction,\r\n    replaceReducer: isFunction,\r\n    runSaga: isFunction,\r\n    injectedReducers: isObject,\r\n    injectedSagas: isObject\r\n  };\r\n  invariant(conformsTo(store, shape), \"checkStore: Expected a valid redux store\");\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport nextReduxWrapper from \"next-redux-wrapper\";\r\n\r\nimport createReducer from \"./reducers\";\r\nimport globalSaga from \"../../global/saga\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middlewares = [sagaMiddleware];\r\nconst enhancers = [applyMiddleware(...middlewares)];\r\n\r\n// Choose compose method depending upon environment and platform\r\nconst composeEnhancers =\r\n  process.env.NODE_ENV !== \"production\" && typeof window === \"object\"\r\n    ? composeWithDevTools\r\n    : compose;\r\n\r\n/**\r\n * Create redux store with the middlewares and enhancers\r\n *\r\n * @param {Object} options\r\n * @param {Object} options.key - Unique key to recognize the page component\r\n * @param {Object} options.reducer - Reducers associated with the page commponent\r\n * @param {Object} options.saga - Sagas associated with the page commponent\r\n */\r\nexport default options => BaseComponent => {\r\n  const hasKey = !!options.key;\r\n  if (!hasKey) throw new Error(`${BaseComponent.displayName} needs to be passed with a key`);\r\n  const hasReducer = !!options.reducer;\r\n  const hasSaga = !!options.saga;\r\n  const reducer = hasKey && hasReducer ? { [options.key]: options.reducer } : {};\r\n\r\n  const configureStore = (initialState = {}) => {\r\n    const store = createStore(createReducer(reducer), initialState, composeEnhancers(...enhancers));\r\n\r\n    // Keep access to 'run' method of saga task in store so thats its available globally with store\r\n    store.runSaga = sagaMiddleware.run;\r\n    // Keep record of reducer injected in store associated with unique key\r\n    store.injectedReducers = reducer;\r\n    if (globalSaga) {\r\n      // Run global saga and keep the task returned by running saga to access later while cancelling\r\n      store.globalSaga = { globalSaga, task: store.runSaga(globalSaga) };\r\n    }\r\n    // Keep record of saga injected in store associated with unique key\r\n    store.injectedSagas = {};\r\n    if (hasSaga) {\r\n      // Run saga and keep the task returned by running saga to access later while cancelling\r\n      store.injectedSagas[options.key] = { ...options.saga, task: store.runSaga(options.saga) };\r\n    }\r\n    return store;\r\n  };\r\n  return nextReduxWrapper(configureStore)(BaseComponent);\r\n};\r\n","export const RESTART_ON_REMOUNT = '@@saga-injector/restart-on-remount';\r\nexport const DAEMON = '@@saga-injector/daemon';\r\nexport const ONCE_TILL_UNMOUNT = '@@saga-injector/once-till-unmount';\r\n","/**\r\n * Enhance is a one of the crucial utility methods that this framework provides.\r\n * All page level component need to be wrapped within this method.\r\n *\r\n * - \"enhance\" function is used here which creates a High Order Component over the provided\r\n * page level component and connects itself to a Redux store.\r\n * - It internally has the definition of the \"getInitialProps\" function which will synchronously\r\n * be called by Next.js which has access to store and request objects from server.\r\n * - The High Order Component which injects the global reducer and saga (if any) that are\r\n * associated with that page level component in its \"getInitialProps\" lifecycle hook.\r\n * - It also then waits for the page level sagas to yield. We have a \"monitorSagas\"\r\n * function which will wait till the done property of all running sagas are resolved/rejected.\r\n * - \"enhance\" function basically creates a High Order Component and connects it to the redux store\r\n * taking in \"mapStateToProps\" and \"mapDispatchToProps\".\r\n *\r\n * Details: [docs/PageLevelComponents_Enhance.md]\r\n */\r\nimport { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport get from \"lodash/get\";\r\nimport hoistNonReactStatic from \"hoist-non-react-statics\";\r\nimport Router from \"next/router\";\r\n\r\nimport initRedux from \"./configureStore\";\r\nimport monitorSagas from \"./monitorSagas\";\r\nimport loggerFactory from \"../../utils/logger\";\r\nimport { DESKTOP, MOBILE, PHONE, API_ERROR_HANDLER_PAGE, TABLET } from \"../../constants\";\r\nimport globalActions, { serverActions, pageActions } from \"../../global/actions\";\r\n\r\nimport { globalDataStructure } from \"../../global/reducer\";\r\nimport injectSagaAndReducer from \"./injectSagaAndReducer\";\r\nimport { parseQueryParams } from \"../../utils/utils\";\r\nimport { pageClientSideActions } from \"../../global/actions\";\r\n\r\nconst logger = loggerFactory.getLogger();\r\n\r\n// List of headers to be extracted before forwarding to the respective\r\n// endpoints from the application\r\nconst headerExclusionList = [\r\n  \"host\",\r\n  \"accept\",\r\n  \"content-length\",\r\n  \"content-type\",\r\n  \"connection\",\r\n  \"cookie\"\r\n];\r\n\r\n/**\r\n * Method to remove the headers present in the \"headerExclusionList\"\r\n *\r\n * @param {Object} requestHeaders Headers object received from the request\r\n */\r\nconst cleanupRequestHeaders = requestHeaders => {\r\n  if (!requestHeaders) {\r\n    return null;\r\n  }\r\n  const requestHeadersCopy = Object.assign({}, requestHeaders);\r\n  headerExclusionList.forEach(header => {\r\n    delete requestHeadersCopy[header];\r\n  });\r\n\r\n  // Alternative header for user agent\r\n  requestHeadersCopy[\"x-ua-browser\"] = requestHeaders[\"user-agent\"];\r\n  return requestHeadersCopy;\r\n};\r\n\r\nexport const getWrapperComponent = (\r\n  WrappedComponent,\r\n  { key, reducer, saga, initialActions, useQuery, criticalState, preExecuteGetInitialProps }\r\n) =>\r\n  class WrapperComponent extends Component {\r\n    /**\r\n     * Method to add the request details to the action object\r\n     *\r\n     * @param {Object} action Action object\r\n     * @param {Object} requestDetails Request object of incoming request\r\n     */\r\n    static addRequestDetails(action, requestDetails) {\r\n      return { ...action, requestDetails };\r\n    }\r\n\r\n    /**\r\n     * Method to validate if critical data required for the page is present based on which\r\n     * page is rendered or user redirected to an error page\r\n     *\r\n     * @param {Object} storeStruct Structure of the critical data required for page\r\n     * @param {Object} res Response object from incoming request for necessary redirects etc.\r\n     * @param {Object} store Redux store of the application\r\n     * @param {boolean} isServer Flag to indicate server/client\r\n     */\r\n    static validatePageData(storeStruct, res, store, isServer) {\r\n      if (storeStruct && storeStruct.length > 0) {\r\n        const currentState = store.getState();\r\n        const missingDataList = [];\r\n\r\n        [...storeStruct, ...globalDataStructure].forEach(requiredDataPath => {\r\n          try {\r\n            if (!get(currentState, requiredDataPath)) {\r\n              missingDataList.push(requiredDataPath);\r\n            }\r\n          } catch (e) {\r\n            missingDataList.push(requiredDataPath);\r\n          }\r\n        });\r\n\r\n        if (missingDataList.length > 0) {\r\n          logger.error(\r\n            `${WrapperComponent.displayName} - Component failed to receive critical data`,\r\n            JSON.stringify(missingDataList)\r\n          );\r\n          if (isServer) {\r\n            res.redirect(API_ERROR_HANDLER_PAGE);\r\n          } else {\r\n            Router.push(API_ERROR_HANDLER_PAGE);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Method to dispatch all page level actions provided to the \"enhance\" method\r\n     *\r\n     * @param {Array} param.actions Array of action objects at page level\r\n     * @param {Object} param.store Redux store object\r\n     * @param {boolean} param.needQuery Flag to indicate if the actions need the query params\r\n     * @param {Object} param.query Query params of the incoming request\r\n     * @param {Object} param.requestDetails Object containing details of incoming request\r\n     */\r\n    static dispatchActions({ actions, store, needQuery, query, requestDetails }) {\r\n      actions.map(action =>\r\n        store.dispatch(\r\n          typeof action === \"function\"\r\n            ? WrapperComponent.addRequestDetails(\r\n                action(needQuery ? query : undefined),\r\n                requestDetails\r\n              )\r\n            : WrapperComponent.addRequestDetails(\r\n                { type: action, query: needQuery ? query : undefined },\r\n                requestDetails\r\n              )\r\n        )\r\n      );\r\n    }\r\n\r\n    static async getInitialProps(...params) {\r\n      const initialParams = params[0];\r\n      console.log('-------------------------------------------------------------------------', initialParams.store)\r\n\r\n      const { store, isServer, req, query, res, pathname, asPath } = initialParams;\r\n\r\n      injectSagaAndReducer(key, store, saga, reducer);\r\n      store.dispatch(serverActions.setCurrentRoute(pathname));\r\n      let requestDetails;\r\n      let clientParams = {};\r\n\r\n      if (isServer) {\r\n        const deviceType = req.device.type === PHONE ? MOBILE : DESKTOP;\r\n        const isTablet = req.device.type === TABLET;\r\n        store.dispatch(serverActions.addIsTablet(isTablet));\r\n        store.dispatch(serverActions.addDeviceType(deviceType));\r\n        store.dispatch(serverActions.setPageUrl(req.url));\r\n        store.dispatch(serverActions.setPageQuery({ ...req.query, ...query }));\r\n        store.dispatch(serverActions.setPageOrigin(`${req.protocol}://${req.headers.host}`));\r\n        store.dispatch(serverActions.getLables());\r\n\r\n        requestDetails = {\r\n          deviceType,\r\n          cookies: req.cookies.cookieList,\r\n          logger: req.perfLogger,\r\n          whitelistedHeaders: cleanupRequestHeaders(req.headers)\r\n        };\r\n      } else {\r\n        clientParams = parseQueryParams(asPath);\r\n        store.dispatch(serverActions.setPageQuery(clientParams));\r\n        requestDetails = {\r\n          deviceType: get(store.getState(), [\"global\", \"globalData\", \"deviceType\"])\r\n        };\r\n      }\r\n\r\n      if (preExecuteGetInitialProps && WrappedComponent.getInitialProps) {\r\n        await WrappedComponent.getInitialProps(...params);\r\n      }\r\n\r\n      if (isServer && globalActions instanceof Array) {\r\n        WrapperComponent.dispatchActions({\r\n          actions: globalActions,\r\n          store,\r\n          needQuery: useQuery,\r\n          query,\r\n          requestDetails\r\n        });\r\n      }\r\n\r\n      const combinedPageActions =\r\n        initialActions instanceof Array ? [...pageActions, ...initialActions] : [...pageActions];\r\n\r\n      WrapperComponent.dispatchActions({\r\n        actions: combinedPageActions,\r\n        store,\r\n        needQuery: useQuery,\r\n        query: { ...query, ...clientParams },\r\n        requestDetails\r\n      });\r\n\r\n      // Wait till all sagas are done\r\n      await monitorSagas(store, isServer);\r\n\r\n      WrapperComponent.validatePageData(criticalState, res, store, isServer);\r\n\r\n      if (!preExecuteGetInitialProps && WrappedComponent.getInitialProps) {\r\n        await WrappedComponent.getInitialProps(...params);\r\n      }\r\n\r\n      return {\r\n        isServer\r\n      };\r\n    }\r\n\r\n    componentDidMount() {\r\n      const { dispatch } = this.props.store;\r\n      pageClientSideActions.length &&\r\n        pageClientSideActions.map(action => {\r\n          dispatch(action());\r\n        });\r\n    }\r\n\r\n    render() {\r\n      return <WrappedComponent {...this.props} />;\r\n    }\r\n  };\r\n\r\n/**\r\n * Create a high order component to initialize store with reducers and sagas\r\n * for the page level component\r\n *\r\n * @param {Object} WrappedComponent Page level component to be wrapped with HOC\r\n * @param {Object} config Configuration\r\n * @param {function} config.mapStateToProps Map properties from state to props\r\n * @param {function} config.mapDispatchToProps Map dispatch method for the component\r\n * @param {string} config.key Unique key identifying the page level component and\r\n * hence its saga and reducer\r\n * @param {Objext} config.reducer Root reducer for the given page level component\r\n * @param {Objext} config.saga Root saga for the given page level component\r\n */\r\nexport default (\r\n  WrappedComponent,\r\n  {\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n    key,\r\n    reducer,\r\n    saga,\r\n    initialActions,\r\n    useQuery,\r\n    criticalState\r\n  }\r\n) => {\r\n  const WrapperComponent = getWrapperComponent(WrappedComponent, {\r\n    key,\r\n    reducer,\r\n    saga,\r\n    initialActions,\r\n    useQuery,\r\n    criticalState\r\n  });\r\n\r\n  // Move all non react specific static properties from WrappedComponent to WrapperComponent\r\n  hoistNonReactStatic(WrapperComponent, WrappedComponent, {\r\n    getInitialProps: true\r\n  });\r\n\r\n  // Give a unique identifier to the new high horder component\r\n  WrapperComponent.displayName = `enhanced(${WrappedComponent.displayName ||\r\n    WrappedComponent.name ||\r\n    \"Component\"})`;\r\n\r\n  const withConnect = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  );\r\n  const withRedux = initRedux({\r\n    key,\r\n    reducer,\r\n    saga\r\n  });\r\n\r\n  return compose(\r\n    withRedux,\r\n    withConnect\r\n  )(WrapperComponent);\r\n};\r\n","import invariant from 'invariant';\r\nimport isString from 'lodash/isString';\r\nimport each from 'lodash/each';\r\nimport getSagaInjectors from './sagaInjectors';\r\nimport getReducerInjectors from './reducerInjectors';\r\n\r\nexport default (key, store, saga, reducer) => {\r\n  invariant(\r\n    isString(key),\r\n    `injectSagaAndReducer.js: Expected \"key\" to be a string, found it to be ${typeof key}`,\r\n  );\r\n\r\n  const { injectReducer } = getReducerInjectors(store);\r\n  const { injectSaga, ejectSaga } = getSagaInjectors(store);\r\n\r\n  each(store.injectedSagas, (sagas, sagaName) => {\r\n    ejectSaga(sagaName);\r\n    // eslint-disable-next-line no-param-reassign\r\n    delete store.injectedSagas[sagaName];\r\n  });\r\n\r\n  if (reducer) injectReducer(key, reducer);\r\n  if (saga) injectSaga(key, { saga });\r\n};\r\n","import each from \"lodash/each\";\r\nimport { END } from \"redux-saga\";\r\nimport getSagaInjectors from \"./sagaInjectors\";\r\n\r\n/**\r\n * @function monitorSagas - Wait till all sagas have been done\r\n * @param {Object} store\r\n * @returns {Promise}\r\n */\r\nexport default function monitorSagas(store, isServer, shouldDispatchEnd = true) {\r\n  const allTasks = [store.globalSaga.task];\r\n  if (shouldDispatchEnd) store.dispatch(END);\r\n  each(store.injectedSagas, saga => {\r\n    allTasks.push(saga.task);\r\n  });\r\n  return Promise.all(allTasks.map(t => t.done)).then(() => {\r\n    if (!isServer && shouldDispatchEnd) {\r\n      const { injectSaga } = getSagaInjectors(store);\r\n      each(store.injectedSagas, (descriptor, key) => {\r\n        const { saga } = descriptor;\r\n        injectSaga(key, { saga });\r\n      });\r\n      store.runSaga(store.globalSaga.globalSaga);\r\n    }\r\n  });\r\n}\r\n","import invariant from 'invariant';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport isFunction from 'lodash/isFunction';\r\nimport isString from 'lodash/isString';\r\nimport checkStore from './checkStore';\r\nimport createReducer from './reducers';\r\n\r\n/**\r\n * @function injectReducerFactory\r\n * @param {Object} store\r\n * @param {boolean} isValid - Prechecked if store is valid\r\n * @returns {function}\r\n */\r\nexport function injectReducerFactory(store, isValid) {\r\n  /**\r\n   * @function injectReducer\r\n   * @param {string} key - Unique key saga\r\n   * @param {Object} reducer\r\n   */\r\n  function injectReducer(key, reducer) {\r\n    if (!isValid) checkStore(store);\r\n\r\n    invariant(\r\n      isString(key) && !isEmpty(key) && isFunction(reducer),\r\n      'reducerInjector.js: Expected `reducer` to be a reducer function',\r\n    );\r\n\r\n    // Check `store.injectedReducers[key] === reducer` for hot\r\n    // reloading when a key is the same but a reducer is different\r\n    if (\r\n      Object.prototype.hasOwnProperty.call(store.injectedReducers, key) &&\r\n      store.injectedReducers[key] === reducer\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    store.injectedReducers[key] = reducer; // eslint-disable-line no-param-reassign\r\n    store.replaceReducer(createReducer(store.injectedReducers));\r\n  }\r\n  return injectReducer;\r\n}\r\n\r\n/**\r\n * @typedef {Object} ReducerInjectors\r\n * @property {function} injectReducer\r\n * @property {function} ejectSaga\r\n */\r\n\r\n/**\r\n * @function getInjectors\r\n * @param {Object} store\r\n * @returns {ReducerInjectors}\r\n */\r\nexport default function getInjectors(store) {\r\n  checkStore(store);\r\n\r\n  return {\r\n    injectReducer: injectReducerFactory(store, true),\r\n  };\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport globalReducer from '../../global/reducer';\r\n\r\n/**\r\n * @function createReducer - Combine reducer for given page level component with global ones\r\n * @param {Object} injectedReducers\r\n * @returns {function}\r\n */\r\nexport default function createReducer(injectedReducers) {\r\n  return combineReducers({\r\n    global: globalReducer,\r\n    ...injectedReducers,\r\n  });\r\n}\r\n","import isEmpty from 'lodash/isEmpty';\r\nimport isFunction from 'lodash/isFunction';\r\nimport isString from 'lodash/isString';\r\nimport invariant from 'invariant';\r\nimport conformsTo from 'lodash/conformsTo';\r\n\r\nimport checkStore from './checkStore';\r\nimport { DAEMON, ONCE_TILL_UNMOUNT, RESTART_ON_REMOUNT } from './constants';\r\n\r\nconst allowedModes = [RESTART_ON_REMOUNT, DAEMON, ONCE_TILL_UNMOUNT];\r\n\r\n/**\r\n * Check if key is empty\r\n * @param {string} key\r\n */\r\nconst checkKey = key =>\r\n  invariant(\r\n    isString(key) && !isEmpty(key),\r\n    'sagaInjector.js : Expected `key` to be a non empty string',\r\n  );\r\n\r\n/**\r\n * Check if the saga is a function and the mode for that saga is the ones from allowedModes\r\n * @param {Object} descriptor\r\n * @param {function} descriptor.saga - The saga to be verified\r\n * @param {string} descriptor.mode - The mode passed for the given saga\r\n */\r\nconst checkDescriptor = (descriptor) => {\r\n  const shape = {\r\n    saga: isFunction,\r\n    mode: mode => isString(mode) && allowedModes.indexOf(mode) > -1,\r\n  };\r\n  invariant(conformsTo(descriptor, shape), 'sagaInjector.js : Expected a valid saga descriptor');\r\n};\r\n\r\n/**\r\n * @function injectSagaFactory\r\n * @param {Object} store\r\n * @param {boolean} isValid - Prechecked if store is valid\r\n * @returns {function}\r\n */\r\nexport function injectSagaFactory(store, isValid) {\r\n  /**\r\n   * @function injectSaga\r\n   * @param {string} key - Unique key saga\r\n   * @param {Object} descriptor\r\n   * @param {Object} descriptor.saga\r\n   * @param {string} descriptor.mode\r\n   * @param {Object} args\r\n   */\r\n  function injectSaga(key, descriptor = {}, args) {\r\n    if (!isValid) checkStore(store);\r\n\r\n    // if mode is not present then default is RESTART_ON_REMOUNT\r\n    const newDescriptor = { ...descriptor, mode: descriptor.mode || RESTART_ON_REMOUNT };\r\n    const { saga, mode } = newDescriptor;\r\n\r\n    checkKey(key);\r\n    checkDescriptor(newDescriptor);\r\n\r\n    let hasSaga = Object.prototype.hasOwnProperty.call(store.injectedSagas, key);\r\n\r\n    // When the environment is development then we need to cancel daemon and once-till-unmount sagas\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      const oldDescriptor = store.injectedSagas[key];\r\n      // enable hot reloading of daemon and once-till-unmount sagas\r\n      if (hasSaga && oldDescriptor.saga !== saga) {\r\n        oldDescriptor.task.cancel();\r\n        hasSaga = false;\r\n      }\r\n    }\r\n\r\n    if (!hasSaga || (hasSaga && mode !== DAEMON && mode !== ONCE_TILL_UNMOUNT)) {\r\n      // eslint-disable-next-line no-param-reassign\r\n      store.injectedSagas[key] = { ...newDescriptor, task: store.runSaga(saga, args) };\r\n    }\r\n  }\r\n  return injectSaga;\r\n}\r\n\r\n/**\r\n * @function ejectSagaFactory\r\n * @param {Object} store\r\n * @param {boolean} isValid - Prechecked if store is valid\r\n * @returns {function}\r\n */\r\nexport function ejectSagaFactory(store, isValid) {\r\n  /**\r\n   * @function ejectSaga\r\n   * @param {string} key - Unique key saga\r\n   */\r\n  function ejectSaga(key) {\r\n    if (!isValid) checkStore(store);\r\n\r\n    checkKey(key);\r\n\r\n    if (Object.prototype.hasOwnProperty.call(store.injectedSagas, key)) {\r\n      const descriptor = store.injectedSagas[key];\r\n      // We do not cancel Daemon tasks\r\n      if (descriptor.mode !== DAEMON) {\r\n        descriptor.task.cancel();\r\n        // Clean up in production; in development we need `descriptor.saga` for hot reloading\r\n        if (process.env.NODE_ENV === 'production') {\r\n          // Need some value to be able to detect `ONCE_TILL_UNMOUNT` sagas in `injectSaga`\r\n          store.injectedSagas[key] = 'done'; // eslint-disable-line no-param-reassign\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return ejectSaga;\r\n}\r\n\r\n/**\r\n * @typedef {Object} SagaInjectors\r\n * @property {function} injectSaga\r\n * @property {function} ejectSaga\r\n */\r\n\r\n/**\r\n * @function getInjectors\r\n * @param {Object} store\r\n * @returns {SagaInjectors}\r\n */\r\nexport default function getInjectors(store) {\r\n  checkStore(store);\r\n\r\n  return {\r\n    injectSaga: injectSagaFactory(store, true),\r\n    ejectSaga: ejectSagaFactory(store, true),\r\n  };\r\n}\r\n","export const fidelity = \"Finnair\";\r\nexport const signIn = \"Sign in\";\r\nexport const signOut = \"SIGN OUT\";\r\nexport const myAccount = \"My Account\";\r\nexport const skipNavigation = \"Skip Navigation\";\r\nexport const PersonalInvesting = \"CUSTOMER CARE\";\r\nexport const PersonalInvestingContactNo = \"+358 9 818 0800\";\r\n// Login Page Labels\r\nexport const loginPageLabels = {\r\n  loginPageTitleText: \"Log in | Fidelity International\",\r\n  mandatoryFieldError: \"This is a mandatory field.\",\r\n  userNameInvalidError: \"\",\r\n  signInHeading: \"Log in to your Finnair Plus account\",\r\n  signInButtonTxt: \"Log in\",\r\n  signInHelpText: \"Having trouble logging in?\",\r\n  viewSupportPage: \"View our Help & support page.\",\r\n  userNameLabel: \"Username\",\r\n  passwordLabel: \"Password\",\r\n  forgotUserName: \"Forgot your username?\",\r\n  userNameCrnInfoMessage:\r\n    \"If you have previously chosen a username then please use that, as your CRN will no longer work.\",\r\n  rememberMeText: \"Remember my username on this computer\",\r\n  next: \"Next\",\r\n  registrationInfoMessage: \"Have a Finnair account, but don't have online access to it?\",\r\n  registerForOnlineAccess: \"Not yet a member? Join the Finnair Corporate Programme\",\r\n  importantInformation: \"Important information: \",\r\n  importantInformationDetails:\r\n    \"You can also find us on Twitter. If you have any questions or comments please tweet us about it and we’ll do our best to help. Here you’ll also find the latest news and information concerning flights. Tweet you soon!\",\r\n  clientTerms: \"Client terms\",\r\n  securityAndPrivacy: \"Security & Privacy\",\r\n  accessibility: \"Accessibility\",\r\n  cookiePolicy: \"Cookie Policy\",\r\n  importantLegalInformation: \"Important Legal Information\",\r\n  copyRight: \"© FIL Limited 2018\"\r\n};\r\n\r\nexport const myAccountPageLables = {};\r\nexport const loginResponseError = \"\";\r\n","import App, { Container } from \"next/app\";\r\nimport React from \"react\";\r\nimport withRedux from \"next-redux-wrapper\";\r\nimport withReduxSaga from \"next-redux-saga\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport enhance from \"../lib/dynamicStore/enhance\";\r\nimport { withRouter } from \"next/router\";\r\nimport rootReducer from \"../components/templates/LoginPage/LoginPage.reducer\";\r\nimport rootSaga from \"../components/templates/LoginPage/LoginPage.saga\";\r\nimport initialActions from \"../components/templates/LoginPage/LoginPage.action\";\r\nimport globalSaga from \"../global/saga\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst mapStateToProps = (state: Map): MapStateToProps => ({\r\n  data: get(state, [\"global\"]),\r\n  deviceType: get(state, [\"global\", \"globalData\", \"deviceType\"]),\r\n  activeBrand: get(state, [\"global\", \"globalData\", \"activeBrand\"]),\r\n  isUserLoggedIn: get(state, [\"global\", \"globalData\", \"sessionInfo\", \"isUserLoggedIn\"])\r\n});\r\n\r\n/* istanbul ignore next */\r\nconst mapDispatchToProps = (dispatch): void => ({});\r\n\r\nconst bindMiddleware = middleware => {\r\n  if (process.env.NODE_ENV !== \"production\") {\r\n    const { composeWithDevTools } = require(\"redux-devtools-extension\");\r\n    return composeWithDevTools(applyMiddleware(...middleware));\r\n  }\r\n  return applyMiddleware(...middleware);\r\n};\r\n\r\n// function configureStore(initialState = {}) {\r\n//   const store = createStore(rootReducer);\r\n\r\n//   // store.runSagaTask = () => {\r\n//   //   store.sagaTask = sagaMiddleware.run(rootSaga);\r\n//   // };\r\n\r\n//   // store.runSagaTask();\r\n//   return store;\r\n// }\r\n\r\nclass MyApp extends App {\r\n  static async getInitialProps({ Component, routes, ctx }) {\r\n    let pageProps = {};\r\n\r\n    // if (Component.getInitialProps) {\r\n    //   pageProps = await Component.getInitialProps({ ...ctx });\r\n    // }\r\n    return { pageProps };\r\n  }\r\n  static configureStore(initialState = {}) {\r\n    const store = createStore(rootReducer, initialState, bindMiddleware([sagaMiddleware]));\r\n    store.runSaga = sagaMiddleware.run;\r\n    store.injectedReducers = rootReducer;\r\n    store.runSagaTask = () => {\r\n      store.sagaTask = sagaMiddleware.run(rootSaga);\r\n    };\r\n    store.injectedSagas = {};\r\n    if (globalSaga) {\r\n      store.globalSaga = { globalSaga, task: store.runSaga(globalSaga) };\r\n    }\r\n    store.injectedSagas[\"login\"] = { ...rootSaga, task: store.runSaga(rootSaga) };\r\n    store.runSagaTask();\r\n    return store;\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    let { Component, pageProps, store } = this.props;\r\n    pageProps = {\r\n      name: \"hello\"\r\n    };\r\n    const key = \"login\";\r\n    return (\r\n      <Container>\r\n        <Provider store={store}>\r\n          <Component {...this.props} />\r\n        </Provider>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRedux(MyApp.configureStore)(withReduxSaga(MyApp));\r\n","import cacheableServices from './servicesCache.config';\r\n\r\n// Array for quick loop if the service is cacheable\r\n/* eslint-disable-next-line import/prefer-default-export */\r\nexport const CACHEABLE_SERVICES_LIST = cacheableServices.map(service => service.url);\r\n","// @flow\r\nimport axios from 'axios';\r\nimport es6promise from 'es6-promise';\r\nimport getConfig from 'next/config';\r\nimport agent from '../../server/utils/proxyAgent';\r\nimport loggerFactory from '../utils/logger';\r\nimport { DESKTOP, ENV_DEVELOPMENT, RESPONSE_OK, RESPONSE_SERVER_ERROR } from '../constants';\r\nimport { CACHEABLE_SERVICES_LIST } from './cacheableServices';\r\n\r\nconst { publicRuntimeConfig } = getConfig();\r\n\r\nconst API_HOSTS = require('../../API_HOST').environment;\r\n\r\nconst logger = loggerFactory.getLogger();\r\n\r\nes6promise.polyfill();\r\n\r\nclass ServiceUtils {\r\n  currentDevice: string;\r\n  environment: string;\r\n  clientPathPrefix: string;\r\n  serverPathPrefix: string;\r\n  envApiKey: string;\r\n\r\n  constructor() {\r\n    this.envApiKey = process.env.ENV_API_KEY || '';\r\n    this.environment = process.env.NODE_ENV || ENV_DEVELOPMENT;\r\n    this.clientPathPrefix = process.env.API_PROXY_PATH || '';\r\n    this.serverPathPrefix = process.env.API_DOMAIN || '';\r\n    this.currentDevice = DESKTOP;\r\n\r\n    /**\r\n     * Condition checks:\r\n     * 1. API hosts map is available on the root\r\n     * 2. environment variable defined for <host_datacenter>\r\n     * 3. <host_datacenter> entry available in hosts file\r\n     */\r\n    if (\r\n      typeof API_HOSTS !== 'undefined' &&\r\n      this.envApiKey &&\r\n      typeof API_HOSTS[this.envApiKey] !== 'undefined'\r\n    ) {\r\n      this.serverPathPrefix = API_HOSTS[this.envApiKey];\r\n    }\r\n  }\r\n\r\n  setDeviceType(device: string): void {\r\n    this.currentDevice = device;\r\n  }\r\n\r\n  getServerPathPrefix(): string {\r\n    return this.serverPathPrefix;\r\n  }\r\n\r\n  static appendParams(url: string, requestData?: Object): string {\r\n    let appendedURL: string = url;\r\n    if (requestData) {\r\n      if (url.indexOf('?') < 0) appendedURL = url.concat('?');\r\n      appendedURL = appendedURL.concat(`device=${requestData.deviceType}`);\r\n    }\r\n    return appendedURL;\r\n  }\r\n\r\n  fetch = async (url: string, actionObject?: Object, additionalFetchOptions?: Object) => {\r\n    let headers = {};\r\n    let fetchUrl: string;\r\n    const start = Date.now();\r\n    let perfLogger;\r\n    let response = {};\r\n    let responseData;\r\n    const isCacheableService =\r\n      CACHEABLE_SERVICES_LIST.indexOf(url.split('?')[0]) !== -1 &&\r\n      publicRuntimeConfig.isCachingEnabled;\r\n    const apiTimeout = +process.env.API_TIMEOUT;\r\n    const isClient = typeof window !== 'undefined';\r\n\r\n    if (isClient) {\r\n      // Client-side call\r\n      fetchUrl = ServiceUtils.appendParams(`${this.clientPathPrefix}${url}`);\r\n    } else if (!(actionObject && actionObject.type)) {\r\n      // Server-side call from initial actions (with no action object)\r\n      throw new Error(`Oh oh, maybe you forgot adding your action object to your fetch in your saga with url ${url}?`);\r\n    } else {\r\n      // Server-side call with proper action object from initial actions\r\n      headers = {\r\n        // Cookie: actionObject.requestDetails.cookies || '',\r\n        'secret-key': '$2a$10$f43a7fmsIv/2DNbFTzfiyeGv1mORmjYNbTqqCM.BJ/JuaIxFHZ.Ou',\r\n        // ...actionObject.requestDetails.whitelistedHeaders,\r\n      };\r\n      perfLogger = actionObject.requestDetails.logger;\r\n      fetchUrl = `${this.serverPathPrefix}${url}`\r\n\r\n      try {\r\n        if (isCacheableService) {\r\n          const cachedResponse = global.servicesCache.get(`${fetchUrl}`);\r\n          if (cachedResponse !== null) {\r\n            perfLogger.log(\r\n              'error',\r\n              `[PERFLOG] [CACHE: HIT] URL: ${fetchUrl} Elapsed Time: ${Date.now() - start}ms`,\r\n            );\r\n            return cachedResponse;\r\n          }\r\n        }\r\n      } catch (err) {\r\n        logger.error(`[CACHE] Failed to fetch from cache: ${fetchUrl}`, err);\r\n      }\r\n    }\r\n\r\n    // Request options in axios format\r\n    const reqOptions = {\r\n      url: fetchUrl,\r\n      headers,\r\n      timeout: apiTimeout,\r\n      withCredentials: true,\r\n      ...additionalFetchOptions,\r\n    };\r\n\r\n    // Add https agent for requests that start with https protocol in url\r\n    if (fetchUrl.startsWith('https')) {\r\n      reqOptions.agent = agent.https;\r\n    }\r\n\r\n    try {\r\n      response = await axios(reqOptions);\r\n      responseData = response.data;\r\n    } catch (err) {\r\n      responseData = {\r\n        status: RESPONSE_SERVER_ERROR,\r\n        error: err.message,\r\n      };\r\n    }\r\n\r\n    try {\r\n      if (!isClient && response.status === RESPONSE_OK && isCacheableService) {\r\n        global.servicesCache.put(\r\n          // Cache in the form \"service_cache:<url>\"\r\n          `${fetchUrl}`,\r\n\r\n          // Cacheable response data\r\n          responseData,\r\n        );\r\n      }\r\n    } catch (err) {\r\n      logger.error(`[CACHE] Failed to cache: ${fetchUrl}`, err);\r\n    }\r\n\r\n    if (perfLogger) {\r\n      perfLogger.log(\r\n        'error',\r\n        `[PERFLOG] [SERVICE] ${isCacheableService ? '[CACHE: MISS]' : ''} Status: ${\r\n          response.status\r\n        } Method: ${reqOptions.method || 'GET'} URL: ${fetchUrl} Elapsed Time: ${Date.now() -\r\n          start}ms`,\r\n      );\r\n    }\r\n\r\n    return responseData;\r\n  };\r\n}\r\n\r\nexport default new ServiceUtils();\r\n","\r\nconst LoggerClass = require('./loggerFactory');\r\n\r\nmodule.exports = new LoggerClass();\r\n","/* eslint-disable import/no-mutable-exports, class-methods-use-this */\r\nlet LoggerClass;\r\n\r\nif (process.browser) {\r\n  LoggerClass = class Logger {\r\n    getLogger() {\r\n      return {\r\n        log: () => {},\r\n        warn: () => {},\r\n        info: () => {},\r\n        error: () => {},\r\n        debug: () => {}\r\n      };\r\n    }\r\n  };\r\n} else {\r\n  /* eslint-disable global-require */\r\n  const os = require(\"os\");\r\n  const Winston = require(\"winston\");\r\n  const { Rotate } = require(\"winston-logrotate\");\r\n  /* eslint-enable global-require */\r\n\r\n  /**\r\n   * Logger class to fetch instances for logging with custom formatting enabled\r\n   */\r\n  LoggerClass = class Logger {\r\n    constructor({ fileName = \"logs/error.log\" } = {}) {\r\n      this.fileName = fileName;\r\n      this.logPrefix = this.getLogPrefix();\r\n    }\r\n\r\n    /**\r\n     * Get the prefix for the log statement containing the log\r\n     * prefix from environment (if available) and the hostname\r\n     *\r\n     * @returns {String} Prefix for the logging statement\r\n     */\r\n    getLogPrefix() {\r\n      const hostName = os.hostname().toUpperCase();\r\n      const logPrefix = process.env.LOG_PREFIX || \"DEFAULT_PREFIX\";\r\n\r\n      return `${logPrefix}|${hostName}`;\r\n    }\r\n\r\n    /**\r\n     * Get the request identifier string for the log statement\r\n     * consisting of the session id and the request id\r\n     *\r\n     * @param {Object} requestIdentifiers Request identifiers as received in the constructor\r\n     * @returns {String} String consisting of session id and request id as available\r\n     */\r\n    getRequestIdentifierString({ sessionId } = {}) {\r\n      return sessionId ? ` [SESSION ID: ${sessionId}]` : \"\";\r\n    }\r\n\r\n    /**\r\n     * Achieve the following format for timestamp:\r\n     * 2017-05-23 11:35:43.673\r\n     *\r\n     * @returns {String} Formatted Date string\r\n     */\r\n    getTimeStampFormat() {\r\n      const date = new Date();\r\n      return `${date.toLocaleString()}.${date.getMilliseconds()}`;\r\n    }\r\n\r\n    /**\r\n     * Achieve the following format for the log statement:\r\n     * 2017-05-23 12:25:54.292 [<LOG_PREFIX>] [SESSION ID: <SESSION_ID>]\r\n     * [REQUEST ID: <REQUEST_ID>] [<LOG_LEVEL>] [<LOGGER_NAME>] - <MESSAGE>\r\n     *\r\n     * @param {Object} options Winston options for custom formatting\r\n     * @returns {String} Custom logging format\r\n     */\r\n    getFormatterString(options) {\r\n      // TODO: add request identifier string post discussion on format (removed as\r\n      // currently undefined)\r\n      const { sessionId } = this;\r\n      const logLine = `|LOG_LINE| ${this.timestampFormat()} [${options.level.toUpperCase()}] [${\r\n        this.logPrefix\r\n      }] ${this.getRequestIdentifierString({ sessionId })} [${this.loggerName}] - ${\r\n        options.message ? options.message : \"\"\r\n      }`;\r\n      return logLine;\r\n    }\r\n\r\n    /**\r\n     * Get the logger instance with request identifiers as part of formatter\r\n     *\r\n     * @param {String} loggerName Name to identify the log initiator\r\n     */\r\n    getLogger({ sessionId, loggerName = \"default\" } = {}) {\r\n      const self = this;\r\n\r\n      const loggerInstance = new Winston.Logger({\r\n        transports: [\r\n          new Rotate({\r\n            file: self.fileName,\r\n            colorize: false,\r\n            timestamp: true,\r\n            size: \"500m\",\r\n            keep: 5,\r\n            json: false,\r\n            compress: false,\r\n            tailable: true,\r\n            formatter: self.getFormatterString.bind(\r\n              Object.assign(self, {\r\n                loggerName,\r\n                timestampFormat: self.getTimeStampFormat.bind(self),\r\n                level: process.env.LOG_LEVEL || \"error\",\r\n                sessionId\r\n              })\r\n            )\r\n          })\r\n        ]\r\n      });\r\n      return loggerInstance;\r\n    }\r\n  };\r\n}\r\n\r\nmodule.exports = LoggerClass;\r\n","/**\r\n * Cachable Services List\r\n * (note: to remain in the object-in-array format for adding further config options)\r\n *\r\n * Example configuration:\r\n * {\r\n *    url: '/test/example',\r\n *    ...future configs (like individual timeout etc.)\r\n * }\r\n */\r\nexport default [];\r\n","import getConfig from 'next/config';\r\nimport Router from 'next/router';\r\n\r\nexport const convertObjectToArray = (obj, takeKeys) =>\r\n  Array.prototype.concat.apply([], takeKeys ? Object.keys(obj) : Object.values(obj));\r\n\r\nexport const pushQueryToHistory = ({\r\n  route,\r\n  asUrl,\r\n  routeQuery,\r\n  pageQuery,\r\n  newQuery,\r\n  shallow,\r\n  replace,\r\n}) => {\r\n  const query = pageQuery ? { ...pageQuery.toJS(), ...newQuery } : { ...newQuery };\r\n  const pathname = window.location.href.split('?')[0];\r\n  const queryString = Object.keys(query).reduce(\r\n    (accumulator, currentValue) =>\r\n      (query[currentValue]\r\n        ? `${accumulator}${currentValue}=${\r\n          query[currentValue] !== decodeURIComponent(query[currentValue])\r\n            ? query[currentValue]\r\n            : encodeURIComponent(query[currentValue])\r\n        }&`\r\n        : accumulator),\r\n    '?',\r\n  );\r\n\r\n  let search = queryString.substr(0, queryString.length - 1);\r\n  search = search !== '?' ? search : undefined;\r\n  const url = asUrl || pathname + search;\r\n\r\n  const promise = replace\r\n    ? Router.replace({ pathname: route, query: routeQuery }, url, {\r\n      shallow: !!shallow,\r\n    })\r\n    : Router.push({ pathname: route, query: routeQuery }, url, {\r\n      shallow: !!shallow,\r\n    });\r\n  return {\r\n    newPageUrl: url,\r\n    newPageQuery: query,\r\n    promise,\r\n  };\r\n};\r\n\r\nexport const parseQueryParams = (pathname) => {\r\n  const search = pathname.split('?')[1];\r\n  if (search) {\r\n    const queryList = search.split('&');\r\n    return queryList.reduce((accu, curr) => {\r\n      const [key, value] = curr.split('=');\r\n      return { ...accu, [key]: value.split('#')[0] };\r\n    }, {});\r\n  }\r\n  return {};\r\n};\r\n\r\nexport const cleanObject = (obj) => {\r\n  const newObj = {};\r\n  Object.keys(obj).forEach((key) => {\r\n    if (obj[key]) newObj[key] = obj[key];\r\n  });\r\n  return newObj;\r\n};\r\n\r\nexport const setCookie = (cookieName, cookieValue, expiryDays) => {\r\n  if (typeof window === 'undefined') return;\r\n  let expires = '';\r\n  if (expiryDays) {\r\n    const d = new Date();\r\n    d.setTime((d.getTime() + expiryDays) * (24 * 60 * 60 * 1000));\r\n    expires = `expires=${d.toUTCString()};`;\r\n  }\r\n  document.cookie = `${cookieName}=${cookieValue};${expires}path=/`;\r\n};\r\n\r\nexport const getCookie = (key) => {\r\n  if (typeof window === 'undefined') return '';\r\n  return document.cookie.replace(\r\n    new RegExp(`(?:(?:^|.*;\\\\s*)${key}\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$`),\r\n    '$1',\r\n  );\r\n};\r\n\r\nexport const createUrlSearchParams = (query = {}) => {\r\n  const queryParams = [];\r\n  const keys = Object.keys(query);\r\n  for (let i = 0, l = keys.length; i < l; i += 1) {\r\n    queryParams.push(`${keys[i]}=${query[keys[i]]}`);\r\n  }\r\n  return queryParams.join('&');\r\n};\r\n\r\nexport const buildUrl = (options) => {\r\n  if (typeof options === 'object') {\r\n    const { pathname, query } = options;\r\n    let url = pathname;\r\n    if (typeof query === 'object') {\r\n      url += `?${createUrlSearchParams(query)}`;\r\n    }\r\n    return url;\r\n  }\r\n  return options;\r\n};\r\n\r\nexport const removeChar = (str, ch) => {\r\n  if (!str || !ch) return str;\r\n  const reg = new RegExp(`\\\\${ch}{1,}`, 'gi');\r\n  return str.replace(reg, x => (x === ch ? ' ' : ` ${ch} `));\r\n};\r\n\r\nexport const elementOffset = (el) => {\r\n  const rect = el.getBoundingClientRect();\r\n  const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\r\n  const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\r\n  return { top: rect.top + scrollTop, left: rect.left + scrollLeft };\r\n};\r\n\r\nexport const redirectInactiveUser = ({\r\n  pathname, shallow, isUserLoggedIn, signOutUser,\r\n}) => {\r\n  if (typeof window !== 'undefined') {\r\n    const IDLE_TIMEOUT = process.env.INACTIVE_USER_TIMEOUT_MINUTES;\r\n    let idleSecondsCounter = 0;\r\n    const checkIdleTimeMiliseconds = 10000;\r\n    let idealTime;\r\n    const eventTypes = ['mousemove', 'mousedown', 'keydown', 'touchstart', 'scroll'];\r\n\r\n    const resetTimer = () => {\r\n      idleSecondsCounter = 0;\r\n    };\r\n\r\n    const checkIdleTime = () => {\r\n      idleSecondsCounter += checkIdleTimeMiliseconds / 1000;\r\n      if (idleSecondsCounter >= IDLE_TIMEOUT * 60) {\r\n        if (isUserLoggedIn) {\r\n          signOutUser({ pathname }, true);\r\n        } else {\r\n          Router.push({ pathname }, pathname, {\r\n            shallow,\r\n          }).then(() => window.scrollTo(0, 0));\r\n        }\r\n        clearInterval(idealTime);\r\n      }\r\n    };\r\n\r\n    idealTime = window.setInterval(checkIdleTime, checkIdleTimeMiliseconds);\r\n\r\n    eventTypes.forEach((event) => {\r\n      window.addEventListener(event, resetTimer);\r\n    });\r\n  }\r\n};\r\n\r\nexport const stopTrackingInactiveUser = () => {\r\n  if (typeof window !== 'undefined') {\r\n    const eventTypes = ['mousemove', 'mousedown', 'keydown', 'touchstart', 'scroll'];\r\n    clearInterval(window.idealTime);\r\n    eventTypes.forEach((event) => {\r\n      window.removeEventListener(event, null, true);\r\n    });\r\n  }\r\n};\r\n\r\nexport const isIOS = () => {\r\n  if (typeof window !== 'undefined') {\r\n    return /iPhone|iPad|iPod/i.test(window.navigator.userAgent);\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const escapeHtml = (text = '') => text.replace(/&#039;/g, \"'\").replace(/%2C;/g, ',');\r\n\r\nexport const addDecimal = (value) => {\r\n  let price = value;\r\n  if (typeof price === 'string') {\r\n    price = parseFloat(value);\r\n  }\r\n  return price.toFixed(2);\r\n};\r\n\r\nexport const removeDecimal = value => (+value % 1 === 0 ? parseInt(value, 10) : value);\r\n\r\nexport const debounce = (fn, wait = 100) => {\r\n  let debounceTimer;\r\n  window.onscroll = () => {\r\n    if (debounceTimer) {\r\n      window.clearTimeout(debounceTimer);\r\n    }\r\n\r\n    debounceTimer = window.setTimeout(() => {\r\n      fn();\r\n    }, wait);\r\n  };\r\n};\r\n\r\n/* eslint-disable no-mixed-operators */\r\nexport const throttle = (fn, wait = 100) => {\r\n  let time = Date.now();\r\n  return () => {\r\n    if (time + wait - Date.now() < 0) {\r\n      fn();\r\n      time = Date.now();\r\n    }\r\n  };\r\n};\r\n/* eslint-enable no-mixed-operators */\r\n\r\nexport const getIsProd = () => {\r\n  const nextConfig = getConfig();\r\n  if (nextConfig) {\r\n    const { publicRuntimeConfig } = nextConfig;\r\n    return publicRuntimeConfig.metricsKey || 'dev';\r\n  }\r\n  return 'dev';\r\n};\r\n\r\nexport const updateState = (state, ...args) => {console.log(state);return Object.assign({}, state, ...args)};\r\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"agentkeepalive\");","module.exports = require(\"axios\");","module.exports = require(\"es6-promise\");","module.exports = require(\"hoist-non-react-statics\");","module.exports = require(\"invariant\");","module.exports = require(\"lodash/conformsTo\");","module.exports = require(\"lodash/each\");","module.exports = require(\"lodash/get\");","module.exports = require(\"lodash/isEmpty\");","module.exports = require(\"lodash/isFunction\");","module.exports = require(\"lodash/isObject\");","module.exports = require(\"lodash/isString\");","module.exports = require(\"next-redux-saga\");","module.exports = require(\"next-redux-wrapper\");","module.exports = require(\"next/app\");","module.exports = require(\"next/config\");","module.exports = require(\"next/router\");","module.exports = require(\"os\");","module.exports = require(\"react\");","module.exports = require(\"react-redux\");","module.exports = require(\"redux\");","module.exports = require(\"redux-devtools-extension\");","module.exports = require(\"redux-saga\");","module.exports = require(\"redux-saga/effects\");","module.exports = require(\"winston\");","module.exports = require(\"winston-logrotate\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAEA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AAAA;AAAA;AACA;AADA;AAAA;AAIA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;;;;;;;;;;;;AC3CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;ACNA;AAMA;AAEA;AACA;AACA;AACA;AAFA;AADA;AAMA;;;;;;;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAVA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClCA;;;AAmBA;AACA;AAlCA;AAEA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAAA;AAGA;AACA;AAJA;AAAA;AAIA;AACA;AALA;AAAA;AAKA;AACA;AANA;AAKA;AACA;AANA;AAAA;AAAA;AAAA;AACA;AADA;AAOA;AACA;AARA;AAAA;AAQA;AACA;AATA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAUA;AACA;AAXA;AAAA;AAWA;AACA;AAZA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAcA;AACA;AAfA;AAAA;AAeA;AACA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAAA;AAGA;AACA;AAJA;AAAA;AAIA;AACA;AALA;AAIA;AACA;AALA;AAAA;AAAA;AAAA;AACA;AADA;AAMA;AACA;AAPA;AAAA;AAOA;AACA;AARA;AAAA;AAQA;AACA;AATA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAUA;AACA;AAXA;AAAA;AAWA;AACA;AAZA;AAAA;AAYA;AACA;AAbA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAeA;AACA;AAhBA;AAAA;AAgBA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAmBA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxDA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AADA;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AAJA;;;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACHA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;;;;;;;;;;;;;;;;;ACAA;AAEA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;AClCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAPA;;;;;;;;;;;;ACjCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AAAA;AAEA;AAqtBA;AAwBA;;;;;;;;;;;;AC9EA;AAAA;AAAA;AAAA;AAAA;AA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;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AAEA;;;;;;;;AAMA;AACA;;;;;;;;AAQA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AALA;AAAA;AAOA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;AAMA;AACA;;;;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;AAMA;;;;;;AAKA;AACA;AAEA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;AClIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAzBA;AA4BA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAOA;AACA;AACA;AADA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AAEA;AACA;;;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AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;;;;;;;;;;;;;;;;;;;;;;;AC3NA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}