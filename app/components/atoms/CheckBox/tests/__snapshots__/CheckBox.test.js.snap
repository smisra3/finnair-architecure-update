// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CheckBox Component  should render checkbox checked 1`] = `
<div>
  <input
    aria-label=""
    checked={true}
    disabled={false}
    onBlur={[Function]}
    onFocus={[Function]}
    readOnly={false}
    type="checkbox"
  />
  <label
    className=" is-checked"
  >
    <span
      aria-hidden={false}
      className="checkbox checkbox-tick checkbox-checked"
      data-slnm-id="checkbox"
    />
  </label>
</div>
`;

exports[`CheckBox Component  should render checkbox without label 1`] = `
<div>
  <input
    aria-label=""
    checked={false}
    disabled={false}
    onBlur={[Function]}
    onFocus={[Function]}
    readOnly={false}
    type="checkbox"
  />
  <label
    className=""
  >
    <span
      aria-hidden={false}
      className="checkbox checkbox-tick  checkbox-unchecked"
      data-slnm-id="checkbox"
    />
  </label>
</div>
`;

exports[`CheckBox Component  should render correctly 1`] = `
<div>
  <input
    aria-label=""
    checked={false}
    disabled={false}
    onBlur={[Function]}
    onFocus={[Function]}
    readOnly={false}
    type="checkbox"
  />
  <label
    className=""
  >
    <span
      aria-hidden={false}
      className="checkbox checkbox-tick  checkbox-unchecked"
      data-slnm-id="checkbox"
    />
  </label>
</div>
`;

exports[`CheckBox Component with style  should render correctly with styles 1`] = `
.c0 {
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
}

.c0 label::before {
  position: absolute;
  left: 0;
  top: calc(50% - 12px);
  content: "";
  height: 20px;
  width: 20px;
  border: 1px solid;
  border-radius: 1px;
  background: #fff;
  box-sizing: border-box;
}

.c0 label::after {
  position: absolute;
  left: 6px;
  top: calc(50% - 7px);
  content: "";
  display: inline-block;
  height: 5px;
  width: 10px;
  border-left: 1px solid;
  border-bottom: 1px solid;
  -webkit-transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
  transform: rotate(-45deg);
  box-sizing: border-box;
}

.c0 .label-field {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  word-break: break-word;
  margin-left: 10px;
  position: relative;
  top: -4px;
}

.c0 ~ input {
  position: absolute;
  width: 15px;
  height: 15px;
  opacity: 0;
  z-index: -1;
}

.c0 input + label::after {
  content: none;
}

.c0 input:checked + label::after {
  content: "";
}

.c0 input:focus + label::before {
  border: 2px solid;
  outline: 1px solid;
}

<CheckBox
  checkedClass=""
  className="c0"
  dataSlnmId="checkbox"
  disabled={false}
  imageUrl=""
  inheritedStyles=""
  inputAriaLabel=""
  isChecked={false}
  isCustom={false}
  label={null}
  labelOnly={false}
  onBlur={[Function]}
  onFocus={[Function]}
  readOnly={false}
  uncheckedClass=""
/>
`;
